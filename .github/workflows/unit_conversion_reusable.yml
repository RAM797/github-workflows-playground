name: Django App Workflow

on:
  push:
    branches:
      - main

# env:
#   DOCKER_IMAGE_NAME: djangoapp
#   DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build_and_test:
    name: build_and_test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: unit_conversion/

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "${{ github.workspace }}"

  linting_workflow:
    name: Python lint
    needs: build_and_test
    # runs-on: ubuntu-latest
    # steps:
    #   - name: godir
    #     run: |
    #       cd /home/runner/work/github-workflows-playground/github-workflows-playground
    #       ls

    uses: RAM797/github-reusable-workflows/.github/workflows/pylint.yml@main
    with:
      path: /home/runner/work/github-workflows-playground/github-workflows-playground/unit_conversion/webapp
      out:  /home/runner/work/github-workflows-playground/github-workflows-playground/${{github.run_id}}_lint_results.log

    #   - name: Run tests
    #     if: always()
    #     run: |
    #       python manage.py migrate
    #       pytest --cov > test_results.log

    #   - name: Upload test results
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: test_results
    #       path: ${{ github.workspace }}/unit_conversion/test_results.log

#   deploy:
#     name: dockerzied deploy
#     runs-on: ubuntu-latest
#     needs: build_and_test
#     defaults:
#         run:
#           working-directory: unit_conversion/
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build Docker image
#         if: always()
#         run: |
#           docker build -t $DOCKER_USERNAME/$DOCKER_IMAGE_NAME .

#       - name: Login to Docker Hub
#         if: always()
#         run: |
#           echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin

#       - name: Push Docker image
#         if: always()
#         run: |
#           docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME

#   download_results:
#     name: download workflow results
#     runs-on: ubuntu-latest
#     needs: build_and_test
#     steps:
#       - name: checkout git directory
#         uses: actions/checkout@v3
        
#       - name: download test results
#         uses: actions/download-artifact@v3
#         with:
#           name: test_results


  